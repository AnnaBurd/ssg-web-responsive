---
import Infobox from "../components/Infobox.astro";
import LandCard from "../components/LandCard.astro";

import BaseLayout from "../layouts/BaseLayout.astro";

import model from "../scripts/contentfulModel";

const promotedLands = await model.getPromotedLandsData();

const heroImgURL =
  "https://images.ctfassets.net/2lc6rsj68vep/4WP9lAVwO9AaH60gvkHfNY/60d980aa7e0c556ea4b63ee31aaee6c0/hero.jpg";
---

<BaseLayout pageTitle="Mua Bán Đất Vũng Tàu" currentPage="index">
  <section class="hero">
    <div class="hero__background">
      <img
        src={`${heroImgURL}?w=1600&f=top`}
        srcset={`${heroImgURL}?fm=jpg&fl=progressive&w=2500&f=top 2500w,
        ${heroImgURL}?fm=jpg&fl=progressive&w=1600&f=top 1600w,
        ${heroImgURL}?fm=jpg&fl=progressive&w=1400&f=top 1400w,
        ${heroImgURL}?fm=jpg&fl=progressive&w=1200&f=top 1200w,
        ${heroImgURL}?fm=jpg&fl=progressive&w=900&f=top 900w,
        ${heroImgURL}?fm=jpg&fl=progressive&w=600&f=top 600w`}
        sizes="100vw"
        alt="Background image"
      />
    </div>
    <h1 class="hero__heading nice-h1">Nơi Hạnh Phúc Ngập Tràn</h1>
    <p class="hero__text nice-p1">Hanh phuc la cai gi nua.</p>
  </section>
  <section class="lands main-container">
    <div class="lands__intro">
      <h2 class="lands__heading nice-h2">Dự án hiện tại đang bán</h2>
      <p class="lands__text nice-p2">
        <a class="link-btn" href="/search"
          >Công ty giới thiệu mấy dự án đất đang bán với tỷ giá và diện tích các
          loại.<span class="link-btn__arrow-background"
            ><svg class="link-btn__arrow-icon">
              <use href="/icons.svg#arrow-link"></use>
            </svg></span
          ></a
        >
      </p>
    </div>
    <div class="lands__cards grid">
      {promotedLands.map((land) => <LandCard land={land} />)}
    </div>
  </section>
  <span class="decorative">
    <svg class="decorative__top-left">
      <use href="/icons.svg#ladder-top-left"></use>
    </svg>
  </span>
  <section class="about-company main-container">
    <div class="about-company__intro">
      <h2 class="about-company__heading nice-h2">
        Tại sao mua đất từ ​​chúng tôi
      </h2>
      <p class="about-company__text nice-p2">
        Chúng tôi cung cấp các lô đất có giấy tờ chứng minh đầy đủ thuộc quyền
        sở hữu của chúng tôi, vì vậy bạn không cần phải mất thời gian tìm kiếm
        và tốn tiền hoa hồng từ môi giới và đại lý.
      </p>
    </div>
    <div class="about-company__content grid">
      <Infobox icon="house" title="Tìm đất tốt">
        Tất cả các lô đất đã được các chuyên gia của chúng tôi kiểm tra đầy đủ
        về mức độ tuân thủ pháp luật và cũng được bác sĩ chuyên khoa tâm thần
        kiểm tra với những khuyến nghị tích cực.
      </Infobox>
      <Infobox icon="face_6" title="Mua ngay của chủ">
        Các lô đất thuộc quyền sở hữu hoàn toàn của chúng tôi và sẵn sàng giao
        dịch ngay hôm nay.
      </Infobox>
      <Infobox icon="description" title="Hồ sơ chuẩn bị đầy đủ">
        Chúng tôi cung cấp tài liệu đầy đủ trên trang web để xem xét trước khi
        giao dịch, cũng như bất kỳ thông tin bổ sung nào theo yêu cầu.
      </Infobox>
    </div>
  </section>
  <span class="decorative">
    <svg class="decorative__bottom-right">
      <use href="/icons.svg#ladder-bottom-right"></use>
    </svg>
  </span>
</BaseLayout>

<style lang="sass">
  .hero
    height: 80vh // Fallback for older browsers
    height: calc(80svh - var(--banner-height) - var(--navbar-height))
    display: flex
    flex-direction: column
    align-items: center
    position: relative
    &__background // Manually positioned image instead of css background in order to use html img srcset attribute
      width: 100%
      height: 100%
      position: absolute
      top: 0
      z-index: -100
      img
        width: 100%
        height: 100%
        object-fit: cover
        object-position: 50% 2%
    &__heading, &__text
      color: var(--color-white)
      opacity: 0.96
    &__heading
      margin-top: calc(max(12vw, 18vh)) // Margin measured in viewport width - works well with the used hero image
    @media only screen and (max-width:900px)
      opacity: 1

  .lands
    margin-bottom: 6vh
    &__intro
      height: 20vh
      display: flex
      flex-direction: column
      justify-content: flex-end
      padding-bottom: 4vh
    &__text
      max-width: 23rem

  .about-company
    height: 95vh
    height: calc(100dvh - var(--navbar-height))
    display: flex
    flex-direction: column
    justify-content: center
    &__intro
      text-align: center
      margin-top: -10rem
      margin-bottom: 6vh
    &__heading
      // TODO typography - figure out nice color scheme
      // background: linear-gradient(90deg, var(--color-secondary) -50%, var(--color-primary) 200%)
      // -webkit-background-clip: text
      // -webkit-text-fill-color: transparent
      // background-clip: text
      // text-fill-color: transparent
    &__text
      // TODO typography - figure out nice color scheme
      // color: var(--color-intermediate-3)
      width: 60%
      margin: 0 auto

  @media only screen and (max-width: 920px)
    .about-company
      height: 105vh
      &__intro
        // background: pink
        margin-top: 0
        margin-bottom: 3vh
      &__text
        width: 80%
  @media only screen and (max-width: 563px)
    .about-company
      height: auto
      padding-top: 5rem
      padding-bottom: 10rem
      &__intro
      &__text
        width: 95%
</style>

<script>
  import RunningTextlineView from "../scripts/views/runningTextlineView";
  import ScrollView from "../scripts/views/scrollView";

  /* Check width of client device to know whether it is a desktop or a mobile client */
  let clientWindowWidth =
    window.innerWidth ||
    document.documentElement.clientWidth ||
    document.body.clientWidth;
  let desktop = clientWindowWidth > 991;

  function init() {
    console.log("Main Page is here!");

    /* Scroll functionality  */
    // Main sections that can come into view on index page
    const heroViewEl = document.querySelector("section.hero");
    const projectsViewEl = document.querySelector("section.lands");
    const aboutViewEl = document.querySelector("section.about-company");
    const footerViewEl = document.querySelector("footer");

    const scroller = new ScrollView([
      { pageElement: heroViewEl },
      { pageElement: projectsViewEl },
      { pageElement: aboutViewEl },
      { pageElement: footerViewEl },
    ]);

    document.addEventListener(
      "wheel",
      function (e) {
        scroller.handleScroll(e);
      },
      {
        passive: false,
      }
    );

    /* Running text line functionality */
    const textLineEl = document.querySelector(".hero__text");
    const lines = [
      "Hanh phuc la cai gi nua.",
      "Hanh phuc la cai gi nua - 12.",
      "Lorem ipsum :)",
      "Any line you want to say",
      "Rather long line line line tatadaadad yey",
      "Văn bản góp ý của Quý Cơ quan gửi về Cục Thu thập dữ liệu và Ứng",
    ];
    let runningTextline = new RunningTextlineView(textLineEl, lines);
    runningTextline.startAnimation();

    /* Animations functionality */

    // scroller.setActive(true);

    let observerOptions = {
      root: null, // viewport
      rootMargin: "0px",
      threshold: [0.1, 0.9], // when threshhold * 100% of the target is visible within the element specified by the root option, the callback is invoked
    };

    let observerCallback = (entries, observer) => {
      entries.forEach((entry) => {
        console.log(entry);

        // TODO effects and transitions when sections come to focus
        if (entry.intersectionRatio > 0.1) {
          // entry.target.style.backgroundColor = "blue";
          // entry.target.style.transition = "background 2.3s";
        }
      });
    };

    let observer = new IntersectionObserver(observerCallback, observerOptions);

    observer.observe(heroViewEl);
    observer.observe(projectsViewEl);

    // this.#dynamicScrollElements.forEach((el) => observer.observe(el));
  }

  if (desktop) {
    init();
  }
</script>
